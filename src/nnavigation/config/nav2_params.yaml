amcl:
  ros__parameters:
    use_sim_time: false
    scan_topic: /waffle2/scan
    odom_frame_id: waffle2/odom
    base_frame_id: waffle2/base_link
    # Add valid parameters here or remove this section if not needed

map_server:
  ros__parameters:
    use_sim_time: false
    yaml_filename: ./config/map.yaml

bt_navigator:
  ros__parameters:
    use_sim_time: false

controller_server:
  ros__parameters:
    use_sim_time: false
    robot_base_frame: waffle2/base_link

planner_server:
  ros__parameters:
    use_sim_time: false
    expected_planner_frequency: 10.0

behavior_server:
  ros__parameters:
    use_sim_time: false

local_costmap:
  ros__parameters:
    plugins: ["obstacle_layer", "inflation_layer"]
    robot_base_frame: waffle2/base_link
    footprint: waffle2/base_footprint
    obstacle_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      enabled: true
      observation_sources: scan
      scan:
        topic: /waffle2/scan
        sensor_frame: laser_frame  # or base_scan, whatever your TF uses
        data_type: LaserScan
        clearing: true
        marking: true
        min_obstacle_height: 0.0
        max_obstacle_height: 2.0

global_costmap:
  ros__parameters:
    plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
    robot_base_frame: waffle2/base_link
    static_layer:
      plugin: "nav2_costmap_2d::StaticLayer"
      map_topic: /map
      subscribe_to_updates: true
      track_unknown_space: false
      use_maximum: false

    obstacle_layer:
      plugin: "nav2_costmap_2d::ObstacleLayer"
      enabled: true
      observation_sources: /waffle2/scan
      scan:
        topic: /waffle2/scan
        sensor_frame: waffle2/base_scan  # or base_scan, whatever your TF uses
        data_type: LaserScan
        clearing: true
        marking: true
        min_obstacle_height: 0.0
        max_obstacle_height: 2.0

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_plugins: ["FollowPath"]

    robot_base_frame: waffle2/base_link

    current_goal_checker: "goal_checker"

    goal_checker:
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.25
      yaw_goal_tolerance: 0.25

    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: false

      critics: [
        "RotateToGoal",
        "Oscillation",
        "ObstacleFootprint",
        "GoalAlign",
        "PathAlign",
        "PathDist",
        "GoalDist"
      ]

      GoalDist.scale: 1.0
      PathDist.scale: 32.0
      PathAlign.scale: 32.0
      GoalAlign.scale: 24.0
      ObstacleFootprint.scale: 0.01
      Oscillation.scale: 1.0
      RotateToGoal.scale: 32.0

      max_vel_x: 0.05
      min_vel_x: 0.0
      max_vel_theta: 0.2
      min_vel_theta: -0.2
      acc_lim_x: 0.5
      acc_lim_theta: 0.2



    

amcl:
  ros__parameters:
    use_sim_time: false
    alpha1: 0.2
    alpha2: 0.2
    alpha3: 0.2
    alpha4: 0.2
    alpha5: 0.2
    base_frame_id: waffle2/base_footprint
    service_introspection_mode: "disabled"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: map
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 100.0
    laser_min_range: -1.0
    laser_model_type: likelihood_field
    max_beams: 60
    max_particles: 2000
    min_particles: 500
    odom_frame_id: waffle2/odom
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.25
    z_hit: 0.5
    z_max: 0.05
    z_rand: 0.5
    z_short: 0.05
    scan_topic: /waffle2/scan
    map_topic: map
    set_initial_pose: false
    always_reset_initial_pose: false
    first_map_only: false
    initial_pose:
      x: 0.0
      y: 0.0
      z: 0.0
      yaw: 0.0
